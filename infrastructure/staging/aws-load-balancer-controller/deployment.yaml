apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-load-balancer-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/managed-by: flux
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: aws-load-balancer-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: aws-load-balancer-controller
    spec:
      initContainers:
      - name: cert-init
        image: alpine:3.18
        command:
        - /bin/sh
        - -c
        - |
          apk add --no-cache openssl
          mkdir -p /tmp/certs
          openssl req -x509 -newkey rsa:2048 -keyout /tmp/certs/tls.key -out /tmp/certs/tls.crt -days 365 -nodes -subj "/C=US/ST=CA/L=San Francisco/O=Dummy/OU=Dummy/CN=localhost"
          chmod 644 /tmp/certs/tls.crt /tmp/certs/tls.key
        volumeMounts:
        - mountPath: /tmp/certs
          name: cert
      containers:
      - args:
        - --cluster-name=sre-challenge-staging
        - --ingress-class=alb
        - --aws-vpc-id=vpc-008f8db5f4ac266b2
        - --aws-region=eu-central-1
        - --webhook-bind-port=0
        - --webhook-cert-dir=/tmp/certs
        - --webhook-cert-file=
        - --webhook-key-file=
        image: public.ecr.aws/eks/aws-load-balancer-controller:v2.7.2
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: 61779
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 10
        name: controller
        ports:
        - containerPort: 61779
          name: metrics-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /readyz
            port: 61779
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/certs
          name: cert
          readOnly: true
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 65534
      serviceAccountName: aws-load-balancer-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        emptyDir: {}