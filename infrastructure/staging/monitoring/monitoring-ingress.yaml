apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 3000}]'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: '/api/health'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/group.name: monitoring-ingress
    alb.ingress.kubernetes.io/group.order: '100'
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "false"
    alb.ingress.kubernetes.io/inbound-cidrs: "10.1.0.0/16"
    alb.ingress.kubernetes.io/tags: Environment=staging,Project=sre-challenge
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kube-prometheus-stack-grafana
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-ingress
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 9090}]'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: '/-/healthy'
    alb.ingress.kubernetes.io/success-codes: '200,302'
    alb.ingress.kubernetes.io/group.name: monitoring-ingress
    alb.ingress.kubernetes.io/group.order: '200'
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "false"
    alb.ingress.kubernetes.io/inbound-cidrs: "10.1.0.0/16"
    alb.ingress.kubernetes.io/tags: Environment=staging,Project=sre-challenge
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kube-prometheus-stack-prometheus
            port:
              number: 9090