apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 1h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: ">=56.0.0 <57.0.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 15m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    # Prometheus configuration
    prometheus:
      prometheusSpec:
        retention: 7d
        retentionSize: 5GB
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: gp2
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 10Gi
        resources:
          requests:
            memory: 400Mi
            cpu: 100m
          limits:
            memory: 2Gi
            cpu: 1000m
        serviceMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        ruleSelectorNilUsesHelmValues: false
        ruleSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
      service:
        type: ClusterIP
        port: 9090
    
    # Grafana configuration
    grafana:
      enabled: true
      adminPassword: "admin123"  # Change in production
      service:
        type: ClusterIP
        port: 80
      persistence:
        enabled: true
        storageClassName: gp2
        size: 5Gi
      resources:
        requests:
          memory: 128Mi
          cpu: 50m
        limits:
          memory: 512Mi
          cpu: 200m
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          kubernetes-cluster-monitoring:
            gnetId: 7249
            revision: 1
            datasource: Prometheus
          kubernetes-pod-monitoring:
            gnetId: 6417
            revision: 1
            datasource: Prometheus
          nginx-ingress-controller:
            gnetId: 9614
            revision: 1
            datasource: Prometheus
          node-exporter:
            gnetId: 1860
            revision: 27
            datasource: Prometheus
      
    # AlertManager configuration
    alertmanager:
      enabled: true
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: gp2
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 2Gi
        resources:
          requests:
            memory: 64Mi
            cpu: 25m
          limits:
            memory: 128Mi
            cpu: 100m
    
    # Node Exporter configuration
    nodeExporter:
      enabled: true
    
    # Kube State Metrics configuration
    kubeStateMetrics:
      enabled: true
    
    # Prometheus Node Exporter configuration
    prometheusNodeExporter:
      enabled: true
    
    # CoreDNS monitoring
    coreDns:
      enabled: true
    
    # Kubelet monitoring
    kubelet:
      enabled: true
    
    # Kube-proxy monitoring
    kubeProxy:
      enabled: true
    
    # Kube-controller-manager monitoring
    kubeControllerManager:
      enabled: true
    
    # Kube-scheduler monitoring
    kubeScheduler:
      enabled: true
    
    # ETCD monitoring
    kubeEtcd:
      enabled: true